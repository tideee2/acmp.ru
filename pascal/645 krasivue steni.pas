{
Красивая стена

(Время: 1 сек. Память: 16 Мб Сложность: 25%)
Однажды великий художник Гигабайт подарил королю Байтландии одно из своих лучших полотен. Король, впечатленный произведением Гигабайта, в знак благодарности подарил ему K плиток из очень ценной разновидности мрамора размером 10x10 квадратных сантиметров каждая.

Художник решил украсить этими плитками одну из стен своего дома. Он задумал выложить из них прямоугольник высотой H плиток и шириной W плиток. Художник понимает, что число вариантов для выбора H и W достаточно велико. Из всех возможных вариантов он хочет выбрать самый красивый. Ваша задача – помочь ему с выбором!

Для определения степени красоты художник решил учитывать два параметра:

Насколько выбранный прямоугольник будет близок к квадрату. Значение этого параметра равно модулю разности чисел H и W(т.е. |H-W|).
Сколько плиток останется невостребованными после украшения стены. Значение этого параметра равно разности чисел K и H*W(т.е. K-H*W, где K ≥ H*W ).
Степень красоты вычисляется как сумма значений двух описанных выше параметров. Например, имея 11 плиток, можно выбрать прямоугольник 3x3, степень красоты равна 0+2 = 2. Также можно выбрать прямоугольник 2x5, тогда степень красоты равна 3+1 = 4. Считается, что чем меньше степень красоты, тем красивее прямоугольник.

Ваша задача – написать программу, которая по заданному числу K находит размеры самого красивого прямоугольника.

Входные данные

Единственная строка входного файла INPUT.TXT содержит одно целое число K – количество подаренных королем плиток (1 ≤ K ≤ 106).

Выходные данные

Единственная строка выходного файла OUTPUT.TXT должна содержать натуральные числа H и W соответственно, которые определяют размеры самого красивого прямоугольника. Числа должны быть разделены одиночным пробелом. Если решений несколько, выведите любое из них.

input.txt
11
output.txt
3 3
input.txt
2
output.txt
1 2
input.txt
20
output.txt
4 5
}
var
   h,w,k,p1,p2,wmin,p1max,p2max:integer;
   i,j:integer;
begin
     readln(k);
     wmin := 99999;
     p1max := 0;
     p2max := 0;
     for i:=1 to k div 2 + 1 do
      for j:=round(sqrt(k)) to k div i + 1 do
       begin
         if i*j <= k then begin
         p1 := abs(i-j);
         p2 := k - i*j;
         w := p1+p2;
         if wmin > w then begin wmin := w;p1max := i; p2max := j;end;
         end;
       end;
     writeln(p1max,' ',p2max);
end.